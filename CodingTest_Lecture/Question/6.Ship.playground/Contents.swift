import UIKit

/*:
 ### 문제1 : 배를 타고 섬으로 건너가라!
 * 다루고 있는 개념 : 시간 연산
 * 난이도 : 하
 
 1. 한 배에는  탈 수 있는 인원이 정시에는 25명, 10분마다 15명씩 탈 수 있습니다.
 2. 배는 매일 9시부터 21시 전까지(21시를 포함하지 않습니다) 10분단위로 들어옵니다.
 3. 전체 대기 인원은 14,000,605명입니다. 우리는 14,000,606번째와 14,000,607번째에 배를 타게 됩니다. 앞사람이 아프거나, 대기를 못하고 빠질 경우 대기인원이 줄어들 수도 있습니다. **라이캣과 자바독이 다른 배를 타야 할 경우에는 뒷배를 타야 합니다.**
     - 라이캣과 자바독이 일에 마지막 배, 월에 마지막 배, 연에 마지막 배를 타는 경우는 없다고 가정합니다.
 4. 1월은 1024일, 2월은 512일, 3월은 256일, 4월은 128일, 5월은 64일, 5월은 32일, 6월은 16일, 7월은 8일, 9월은 4일, 10월은 2일이며, 10월까지밖에 없습니다.
 5. 시간의 개념은 동일합니다. (하루는 24시간, 1시간 60분, 1분 60초)
     - **현재 날짜는 2020년 1월 1일 입니다.**
 6. 배에 타는 순간 자바독이 화장실이 급하다 하여 화장실에 갔으며, 현재시간에 '분'만큼 배 출발이 늦어졌습니다.
 7. 배는 휴일도 동일하게 운항됩니다. 배는 천재지변에 영향을 받지 않습니다. 마법으로 날아다니거든요.
 8. **라이캣과 자바독이 배에 타는 날짜를 구하세요.**

     ```python
     **입력**
     대기인원 = 14000605

     **출력**
     2025년 2월 413일 11시 0분 출발

     **입력**
     대기인원 = 1200202

     **출력**
     2020년 1월 1000일 11시 0분 출발

     ```
 
 
 
 /*
  9        25  25
  9/10     15  40
  9/20     15  55
  9/30     15  70
  9/40     15  85
  9/50     15  100
  
  10       25  125
  10/10    15  140
  10/20    15  155
  10/30    15  170
  10/40    15  185
  10/50    15  200
  
  시간당 100명 * 12 = 1200명
  */
 */

func ship(_ delayPeople: Int) -> String {
  
  var 년 = 0;
  var 월 = 0;
  var 일 = 0;
  var 시 = 0;
  var 분 = 0;
  
  let 걸린일수 = delayPeople / 1200
  var 일년일수 = 0;
  for i in (1...10).reversed() {
    일년일수 += (pow(2, i) as NSDecimalNumber).intValue
  }
  
  년 = 걸린일수 / 일년일수
  
  var 나머지일수 = 걸린일수 % 일년일수
  var 걸린월수 = 0;
  for i in (1...10).reversed() {
    걸린월수 += 1
    if 나머지일수 < (pow(2, i) as NSDecimalNumber).intValue {
      break
    }
    
    나머지일수 -= (pow(2, i) as NSDecimalNumber).intValue
  }
  
  월 = 걸린월수 - 1
  일 = 나머지일수
  시 = delayPeople%1200/100 + 9
  
  let 출발분 = [25, 40, 55, 85, 100]
  var 계산된분 = 0
  
  for i in 0..<출발분.count {
    if 출발분[i] > delayPeople%1200%100 {
      계산된분 = i * 10
      break
    }
  }
  
  분 = 계산된분

  return String(format: "%d년 %d월 %d일 %d시 %d분 출발", 2020+년, 1+월, 일, 시, 분)
}

print(ship(1200202))
